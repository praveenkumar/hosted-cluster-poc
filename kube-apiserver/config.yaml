---
apiVersion: kubecontrolplane.config.openshift.io/v1
kind: KubeAPIServerConfig
admission:
  pluginConfig:
    network.openshift.io/ExternalIPRanger:
      configuration:
        allowIngressIP: false
        apiVersion: network.openshift.io/v1
        externalIPNetworkCIDRs: 
        kind: ExternalIPRangerAdmissionConfig
      location: ''
    network.openshift.io/RestrictedEndpointsAdmission:
      configuration:
        apiVersion: network.openshift.io/v1
        kind: RestrictedEndpointsAdmissionConfig
        restrictedCIDRs:
        - ${POD_NETWORK_CIDR}
        - ${SERVICE_NETWORK_CIDR}
aggregatorConfig:
  proxyClientInfo:
    certFile: "/etc/kubernetes/kube-apiserver-aggregator-proxy-client.pem"
    keyFile: "/etc/kubernetes/kube-apiserver-aggregator-proxy-client-key.pem"
apiServerArguments:
  enable-aggregator-routing:
  - 'true'
  feature-gates:
  - ExperimentalCriticalPodAnnotation=true
  - SupportPodPidsLimit=true
  - LocalStorageCapacityIsolation=false
  http2-max-streams-per-connection:
  - '2000'
  kubelet-preferred-address-types:
  - InternalIP
  minimal-shutdown-duration:
  - 70s
  storage-backend:
  - etcd3
  storage-media-type:
  - application/vnd.kubernetes.protobuf
  advertise-address:
  - "${EXTERNAL_API_IP_ADDRESS}"
auditConfig:
  auditFilePath: "/var/log/kube-apiserver/audit.log"
  enabled: true
  logFormat: json
  maximumFileSizeMegabytes: 100
  maximumRetainedFiles: 10
  policyConfiguration:
    apiVersion: audit.k8s.io/v1beta1
    kind: Policy
    omitStages:
    - RequestReceived
    rules:
    - level: None
      resources:
      - group: ''
        resources:
        - events
    - level: None
      resources:
      - group: oauth.openshift.io
        resources:
        - oauthaccesstokens
        - oauthauthorizetokens
    - level: None
      nonResourceURLs:
      - "/api*"
      - "/version"
      - "/healthz"
      - "/readyz"
      userGroups:
      - system:authenticated
      - system:unauthenticated
    - level: Metadata
      omitStages:
      - RequestReceived
authConfig:
  oauthMetadataFile: "/etc/kubernetes/oauthMetadata.json"
  requestHeader:
    clientCA: "/etc/kubernetes/root-ca.pem"
    clientCommonNames:
    - kube-apiserver-proxy
    - system:kube-apiserver-proxy
    - system:openshift-aggregator
    extraHeaderPrefixes:
    - X-Remote-Extra-
    groupHeaders:
    - X-Remote-Group
    usernameHeaders:
    - X-Remote-User
  webhookTokenAuthenticators: 
consolePublicURL: ''
corsAllowedOrigins:
- "//127\\.0\\.0\\.1(:|$)"
- "//localhost(:|$)"
imagePolicyConfig:
  internalRegistryHostname: image-registry.openshift-image-registry.svc:5000
kubeletClientInfo:
  ca: "/etc/kubernetes/root-ca.pem"
  certFile: "/etc/kubernetes/kube-apiserver-kubelet.pem"
  keyFile: "/etc/kubernetes/kube-apiserver-kubelet-key.pem"
  port: 10250
projectConfig:
  defaultNodeSelector: ''
serviceAccountPublicKeyFiles:
- "/etc/kubernetes/service-account.pem"
servicesNodePortRange: 30000-32767
servicesSubnet: ${SERVICE_NETWORK_CIDR}
servingInfo:
  bindAddress: 0.0.0.0:6443
  bindNetwork: tcp4
  clientCA: "/etc/kubernetes/root-ca.pem"
  certFile: "/etc/kubernetes/kube-apiserver-server.pem"
  keyFile: "/etc/kubernetes/kube-apiserver-server-key.pem"
  maxRequestsInFlight: 1200
  requestTimeoutSeconds: 3600
storageConfig:
  ca: "/etc/kubernetes/root-ca.pem"
  certFile: "/etc/kubernetes/etcd-client.pem"
  keyFile: "/etc/kubernetes/etcd-client-key.pem"
  urls:
  - https://${EXTERNAL_API_IP_ADDRESS}:2379
userAgentMatchingConfig:
  defaultRejectionMessage: ''
  deniedClients: 
  requiredClients: 
